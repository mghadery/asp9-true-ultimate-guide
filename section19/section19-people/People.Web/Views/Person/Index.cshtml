@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model IEnumerable<PersonResponse>
@{
    ViewBag.Title = "Persons";
}

@functions {
    string tblHdr(string columnName, string displayName)
    {
        string searchBy = ViewBag.SearchBy;
        string searchString = ViewBag.SearchString;
        string sortBy = ViewBag.SortBy;
        bool ascending = ViewBag.Ascending;

        string icon = "";
        if (sortBy != columnName)
            ascending = true;
        else if (ascending)
        {
            icon = "<i class=\"fa-solid fa-sort-up\"></i>";
            ascending = false;
        }
        else
        {
            icon = "<i class=\"fa-solid fa-sort-down\"></i>";
            ascending = true;
        }
        sortBy = columnName;

        var url = Url.Action("index", "person", new { searchBy, searchString, sortBy, ascending });

        return $"<a href=\"{url}\">{displayName}</a>{icon}";
    }
}

<a class="link-hover" href="@Url.Action("create", "person")">Create Person</a>
<a class="link-hover" asp-controller="person" asp-action="ListPdf">Pdf</a>
<a class="link-hover" asp-controller="person" asp-action="GetCsv">Csv</a>
<a class="link-hover" asp-controller="person" asp-action="GetExcel">xlsx</a>
<a class="link-hover" asp-controller="person" asp-action="ImportCountries">Import Countries</a>
<form action="@Url.ActionLink("index", "person")" method="get">
    <input type="hidden" name="sortBy" value="@ViewBag.SortBy" />
    <input type="hidden" name="ascending" value="@((bool)ViewBag.Ascending).ToString()" />
    <div class="box flex">
        <div class="flex-1">
            <select name="searchBy" class="form-input">
                @foreach (var item in (Dictionary<string, string>)ViewBag.SearchFields)
                {
                    <option value="@item.Key" selected="@(ViewBag.SearchBy == item.Key)">@item.Value</option>
                }
            </select>
        </div>
        <div class="flex-1">
            <input name="searchString" type="search" placeholder="Search" class="form-input" value="@ViewBag.SearchString" />
        </div>
        <div class="flex-1">
            <button class="button button-blue-back">Search</button>
            <a class="link-hover" href="@Url.ActionLink("index", "person")">Clear All</a>
        </div>
    </div>

    <table class="table w-100 mt">
        <thead>
            <tr>
                <th>@Html.Raw(tblHdr("PersonName", "Name"))</th>

                @* <th>@Html.Raw(tblHdr("Email", "Person Email"))</th> *@
                <th>
                    @await Html.PartialAsync("_TblHdr", new ViewDataDictionary(ViewData)
               {
                   ["AcionName"] = "Index",
                   ["ControllerName"] = "Person",
                   ["ColumnName"] = "Email",
                   ["DisplayName"] = "Email"
               })
                </th>
                <th>
                    @await Html.PartialAsync("_TblHdr", new ViewDataDictionary(ViewData)
               {
                   ["AcionName"] = "index",
                   ["ControllerName"] = "Person",
                   ["ColumnName"] = "DateOfBirth",
                   ["DisplayName"] = "BirthDate"
               })
                </th>
                <th>
                    @await Html.PartialAsync("_TblHdr", new ViewDataDictionary(ViewData)
               {
                   ["AcionName"] = "index",
                   ["ControllerName"] = "Person",
                   ["ColumnName"] = "Gender",
                   ["DisplayName"] = "Gender"
               })
                </th>
                <th>
                    @await Html.PartialAsync("_TblHdr", new ViewDataDictionary(ViewData)
               {
                   ["AcionName"] = "index",
                   ["ControllerName"] = "Person",
                   ["ColumnName"] = "Country",
                   ["DisplayName"] = "Country"
               })
                </th>
                <th>
                    @await Html.PartialAsync("_TblHdr", new ViewDataDictionary(ViewData)
               {
                   ["AcionName"] = "index",
                   ["ControllerName"] = "Person",
                   ["ColumnName"] = "Address",
                   ["DisplayName"] = "Address"
               })
                </th>
                <th>
                    @await Html.PartialAsync("_TblHdr", new ViewDataDictionary(ViewData)
               {
                   ["AcionName"] = "index",
                   ["ControllerName"] = "Person",
                   ["ColumnName"] = "ReceiveNewsLetters",
                   ["DisplayName"] = "ReceiveNewsLetters"
               })
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (PersonResponse person in Model)
            {
                <tr>
                    <td>@person.PersonName</td>
                    <td>@person.Email</td>
                    <td>@person.DateOfBirth.ToString("yyyy-MM-dd")</td>
                    <td>@person.Gender</td>
                    <td>@person.Country</td>
                    <td>@person.Address</td>
                    <td>@person.ReceiveNewsLetters</td>
                    <td>
                        <a asp-action="Edit" asp-controller="person" asp-route-personId="@person.PersonId" class="button button-blue-back">Edit</a>
                        <a asp-action="Delete" asp-controller="person" asp-route-personId="@person.PersonId" class="button button-red-back">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</form>

